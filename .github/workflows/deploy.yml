name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths: 
      - 'README.md'
      - 'overrides/**'
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements.txt'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # See https://github.com/ObsidianPublisher/actions/blob/main/.github/workflows/deploy.yml for originals.
  check-env:
    name: Check Environment
    runs-on: ubuntu-latest
    outputs: 
      WORKFLOW_TYPE: ${{ steps.check-env.outputs.WORKFLOW_TYPE }}
      RUN_GRAPH: ${{ steps.check-env.outputs.RUN_GRAPH }}
    steps:
      - uses: actions/checkout@v3
      - name: Get .env file
        uses: xom9ikk/dotenv@v2.2.0
        with:
          path: .github
          load-mode: strict
      - name: send to output
        id: check-env
        run: |
          echo "WORKFLOW_TYPE=${{ env.WORKFLOW_TYPE }}" >> $GITHUB_OUTPUT
          echo "WORKFLOW_TYPE = ${{ env.WORKFLOW_TYPE }}"
          ACTION_REQUIREMENTS=false
          if [ ${{ env.WORKFLOW_TYPE}} != 'gh-pages' ]; then
            if [ -f "requirements_actions.txt" ]; then
              ACTION_REQUIREMENTS=true
            fi
          fi
          GENERATE_GRAPH=${{ github.event.inputs.GENERATE_GRAPH || 'false'}}
          echo "ACTION_REQUIREMENTS = $ACTION_REQUIREMENTS"
          echo "GENERATE_GRAPH = $GENERATE_GRAPH"
          if [[ $GENERATE_GRAPH == 'true' && $ACTION_REQUIREMENTS == 'true' ]]; then
            echo "RUN_GRAPH=true" >> $GITHUB_OUTPUT
          else
            echo "RUN_GRAPH=false" >> $GITHUB_OUTPUT
          fi
          echo "ACT (LOCAL RUN) = ${{ env.ACT }}"
          echo "RUN THE GRAPH GENERATOR = $RUN_GRAPH"
  build-docs:
    name: Build with mkdocs
    runs-on: ubuntu-latest
    needs: check-env
    steps:
      - name: Install pandoc-citeproc
        id: install-citeproc
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          version: 1.0
          packages: pandoc-citeproc
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Documents
        id: build-docs
        uses: jmpicnic/actions-gen-mkdocs@v1
        with:
          docs-dir: .
          site-target-dir: site
          requirements-file-name: requirements.txt
          mkdocs-file-name: mkdocs.yml
          for-techdocs: False
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2 
        with:
          path: ${{ steps.build-docs.outputs.generated-site }}
  deploy:
    # Add a dependency to the upload job
    needs: build-docs
    # Specify runner + deployment step
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action