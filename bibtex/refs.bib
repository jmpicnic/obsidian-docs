@misc{baeldungUMLStateDiagrams2023,
  title = {{{UML State Diagrams Explained}} {\textbar} {{Baeldung}} on {{Computer Science}}},
  author = {{baeldung}},
  year = {2023},
  month = apr,
  urldate = {2023-12-05},
  abstract = {Learn about the components and syntax of a UML state diagram.},
  howpublished = {https://www.baeldung.com/cs/uml-state-diagrams},
  langid = {american},
  file = {/Users/jmp/Zotero/storage/QEU94GYW/uml-state-diagrams.html}
}

@book{berkSystemsFailureAnalysis2009,
  title = {Systems {{Failure Analysis}}},
  author = {Berk, Joseph},
  year = {2009},
  month = dec,
  publisher = {ASM International},
  doi = {10.31399/asm.tb.sfa.9781627082686},
  urldate = {2024-05-02},
  abstract = {Systems Failure Analysis explains the tools and concepts used to get at the root causes of defects and failures in complex manufacturing and engineered systems. The methods described identify and evaluate potential failure causes. The book outlines the failure analysis process beginning with defining the problem, identifying all potential failure causes, objectively evaluating each potential cause, and implementing actions to preclude recurrence. Contents include fault-tree, pedigree, and change analysis; failure mode assessment and assignment; leaks and contaminants; design analysis, statistics, design of experiments, and corrective actions. Analytical equipment is discussed as well as mechanical and electronic failures. For information on the print version, ISBN 978-1-61503-012-5, follow this link.},
  isbn = {978-1-62708-268-6},
  langid = {english}
}

@article{CapabilityMaturityModel2023,
  title = {Capability {{Maturity Model}}},
  year = {2023},
  month = aug,
  journal = {Wikipedia},
  urldate = {2024-05-01},
  abstract = {The Capability Maturity Model (CMM) is a development model created in 1986 after a study of data collected from organizations that contracted with the U.S. Department of Defense, who funded the research.  The term "maturity" relates to the degree of formality and optimization of processes, from ad hoc practices, to formally defined steps, to managed result metrics, to active optimization of the processes. The model's aim is to improve existing software development processes, but it can also be applied to other processes. In 2006, the Software Engineering Institute at Carnegie Mellon University developed the Capability Maturity Model Integration, which has largely superseded the CMM and addresses some of its drawbacks.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1170856090},
  file = {/Users/jmp/Zotero/storage/P9Z5YYJI/Capability_Maturity_Model.html}
}

@unpublished{d.donohoReproducibleResearchMathematical,
  title = {Reproducible {{Research}} in the {{Mathematical Sciences}}},
  author = {{D. Donoho} and {V. Stodden}},
  address = {Department of Statistics, Stanford University. Stanford, CA 94305},
  urldate = {2024-02-23},
  file = {/Users/jmp/Zotero/storage/EY6HZGDW/PCAM_20140620-VCS.pdf}
}

@book{demingNewEconomicsIndustry1997,
  title = {The New Economics for Industry, Government, Education},
  author = {Deming, William Edwards},
  year = {1997},
  edition = {2. ed., 4. printing},
  publisher = {Massachusetts Institute of Technology / Center for Advanced Educational Services},
  address = {Cambridge, MA},
  isbn = {978-0-911379-07-5},
  langid = {english},
  note = {Includes bibliographical references and index}
}

@book{doerrMeasureWhatMatters2018,
  title = {Measure What Matters: How {{Google}}, {{Bono}}, and the {{Gates Foundation}} Rock the World with {{OKRs}}},
  shorttitle = {Measure What Matters},
  author = {Doerr, John},
  year = {2018},
  edition = {International edition},
  publisher = {Portfolio/Penguin},
  address = {New York},
  isbn = {978-0-525-53622-2 978-0-525-53834-9},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/3XWA5RTL/Doerr - 2018 - Measure what matters how Google, Bono, and the Ga.pdf}
}

@article{EventualConsistency2023,
  title = {Eventual Consistency},
  year = {2023},
  month = jul,
  journal = {Wikipedia},
  urldate = {2023-12-06},
  abstract = {Eventual consistency is a consistency model used in distributed computing to achieve high availability that informally guarantees that, if no new updates are made to a given data item, eventually all accesses to that item will return the last updated value. Eventual consistency, also called optimistic replication, is widely deployed in distributed systems and has origins in early mobile computing projects. A system that has achieved eventual consistency is often said to have converged, or achieved replica convergence. Eventual consistency is a weak guarantee -- most stronger models, like linearizability, are trivially eventually consistent. Eventually-consistent services are often classified as providing BASE semantics (basically-available, soft-state, eventual consistency), in contrast to traditional ACID (atomicity, consistency, isolation, durability). In chemistry, a base is the opposite of an acid, which helps in remembering the acronym.  According to the same resource, these are the rough definitions of each term in BASE: Basically available: reading and writing operations are available as much as possible (using all nodes of a database cluster), but might not be consistent (the write might not persist after conflicts are reconciled, and the read might not get the latest write) Soft-state: without consistency guarantees, after some amount of time, we only have some probability of knowing the state, since it might not yet have converged Eventually consistent: If we execute some writes and then the system functions long enough, we can know the state of the data; any further reads of that data item will return the same valueEventual consistency is sometimes criticized as increasing the complexity of distributed software applications. This is partly because eventual consistency is purely a liveness guarantee (reads eventually return the same value) and does not guarantee safety: an eventually consistent system can return any value before it converges.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  keywords = {Wikipedia},
  annotation = {Page Version ID: 1164025873},
  file = {/Users/jmp/Zotero/storage/26363SWV/Eventual_consistency.html}
}

@article{faergemandSDL921994,
  title = {Introduction to {{SDL-92}}},
  author = {F{\ae}rgemand, Ove and Olsen, Anders},
  year = {1994},
  month = may,
  journal = {Computer Networks and ISDN Systems},
  volume = {26},
  number = {9},
  pages = {1143--1167},
  issn = {0169-7552},
  doi = {10.1016/0169-7552(94)90016-7},
  urldate = {2023-12-05},
  abstract = {This paper contains an introduction to SDL --- Specification and Description Language --- as it appears in the revised CCITT (At the plenary assembly March 1993, CCITT was renamed to WTSC (World Telecommunication Standardization Conference); however, this paper uses the more familiar term CCITT) recommendation. The paper covers main aspects of the new version of SDL in three main areas: structure, behaviour and data. The paper covers in particular the new features for object-oriented structuring in the language. The paper concludes with an overview of current activities in standards, research and industry.},
  keywords = {Computer-aided software engineering,Formal description technique,Generic types,Graphical representation,Instance,Object-orientation,Specialization,State machines,Type},
  file = {/Users/jmp/Zotero/storage/JJ5CNGJZ/0169755294900167.html}
}

@misc{FAQHibernateORM,
  title = {{{FAQ}} - {{Hibernate ORM}}},
  journal = {Hibernate},
  urldate = {2023-12-06},
  abstract = {Idiomatic persistence for Java and relational databases.},
  howpublished = {https://hibernate.org/orm/faq/},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/BJPUZ4U8/faq.html}
}

@book{goldrattCriticalChain2001,
  title = {Critical Chain},
  author = {Goldratt, Eliyahu M.},
  year = {2001},
  publisher = {North River Press},
  address = {Great Barrington, Mass},
  isbn = {978-0-88427-153-6},
  langid = {english}
}

@article{harelStatechartsVisualFormalism1987,
  title = {Statecharts: A Visual Formalism for Complex Systems},
  shorttitle = {Statecharts},
  author = {Harel, David},
  year = {1987},
  month = jun,
  journal = {Science of Computer Programming},
  volume = {8},
  number = {3},
  pages = {231--274},
  issn = {01676423},
  doi = {10.1016/0167-6423(87)90035-9},
  urldate = {2023-12-05},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/YVI745VZ/Harel - 1987 - Statecharts a visual formalism for complex system.pdf}
}

@article{hauserHouseQuality1988,
  title = {The {{House}} of {{Quality}}},
  author = {Hauser, John R. and Clausing, Don},
  year = {1988},
  month = may,
  journal = {Harvard Business Review},
  issn = {0017-8012},
  urldate = {2023-12-06},
  abstract = {Design is a team effort, but how do marketing and engineering talk to each other?},
  chapter = {Analytics and data science},
  keywords = {Analytics and data science,Leading teams,Organizational development,Product development,Strategic planning},
  file = {/Users/jmp/Zotero/storage/MSDDUS7Z/the-house-of-quality.html}
}

@book{hoppFactoryPhysics2011,
  title = {Factory Physics},
  author = {Hopp, Wallace J. and Spearman, Mark L.},
  year = {2011},
  edition = {3rd ed},
  publisher = {Waveland Press},
  address = {Long Grove, Ill},
  isbn = {978-1-57766-739-1},
  langid = {english},
  note = {Includes bibliographical references (p. 697-705) and index}
}

@misc{IBMActivityDiagram2021,
  type = {Software {{Product}}},
  title = {{{UML Activity Diagrams}}},
  shorttitle = {{{IBM Activity Diagram}}},
  author = {{IBM Corporation}},
  year = {2021},
  month = mar,
  journal = {IBM Activity Diagram},
  urldate = {2023-12-05},
  abstract = {In UML, an activity diagram provides a view of the behavior of a system by describing the sequence of actions in a process. Activity diagrams are similar to flowcharts because they show the flow between the actions in an activity; however, activity diagrams can also show parallel or concurrent flows and alternate flows.},
  copyright = {{\copyright} Copyright IBM Corporation 2004},
  howpublished = {https://www.ibm.com/docs/en/rsm/7.5.0?topic=diagrams-activity},
  langid = {american},
  file = {/Users/jmp/Zotero/storage/8RH2YME9/7.5.html}
}

@misc{ISO9000Series,
  title = {{{ISO}} 9000 {{Series}} of {{Standards}} - {{What}} Is {{ISO}} 9000? {\textbar} {{ASQ}}},
  urldate = {2024-05-09},
  howpublished = {https://asq.org/quality-resources/iso-9000},
  file = {/Users/jmp/Zotero/storage/HAMGS4ZB/iso-9000.html}
}

@inproceedings{jianpengdongAutomatedPlanningMaterial1999,
  title = {Automated {{Planning}} for {{Material Shapping Operations}} in {{Additive}}/{{Substractive Solid Freeform Fabrication}}},
  booktitle = {International {{Solid Freeform Fabrication Symposium}}.},
  author = {{Jianpeng Dong} and {Ju-Hsien Kao} and {Jose M. Pinilla} and {Yu-Chi Chang} and {Fritz B. Prinz}},
  year = {1999},
  abstract = {Combining the advantages of layered manufacturing and material removal processes, additive/subtractive solid free form fabrication A/SSFF can buildpartswithcomplexshapeswithoutcompromisingprecisionrequirements.However,preparingmaterialremovaloperationsrequiresspecialexpertise,whichhas in factbecomeone of the bottlenecks of the  S SFFmanufacturingprocess.  o achieveautomatedplanning,ashapingprocessplanner is beingdevelopedbased on 3D solidrepresentationandasurfaceclassificationscheme.Thisplanner can generatenumericcontrol NC codes forCNC milling in an automaticfashiononnon-undercutfeatures of arbitrary 3D inputgeometry.Planningapproaches are also p partsaccuratelyandefficiently.Theproposedshapingplannerthusdelivers on thepromise offully automatedprocessplanninginA/SSFF},
  copyright = {All rights reserved}
}

@misc{LogisticsWhatIt,
  title = {Logistics: {{What It Means}} and {{How Businesses Use It}}},
  shorttitle = {Logistics},
  journal = {Investopedia},
  urldate = {2024-05-22},
  abstract = {Logistics is the overall process of managing the way resources are obtained, stored, and moved to the locations where they are required. Learn more about how it works.},
  howpublished = {https://www.investopedia.com/terms/l/logistics.asp},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/R96JXX6Q/logistics.html}
}

@techreport{loracecereManagingInventoryUncertain2024,
  title = {Managing Inventory in Uncertain Times},
  author = {{Lora Cecere}},
  year = {2024},
  pages = {18},
  institution = {UST},
  abstract = {Inventory is the most important supply chain buffer and the most significant source of waste. Reaching the right balance requires the careful execution of strategy, discipline, and organizational alignment. Here we share research and insights to improve performance.},
  langid = {american},
  file = {/Users/jmp/Zotero/storage/4CXYFN7L/Final Report - IR Lora Cecere 2024.pdf}
}

@misc{martinekuanEventSourcingPattern,
  title = {Event {{Sourcing}} Pattern - {{Azure Architecture Center}}},
  author = {{martinekuan}},
  urldate = {2023-12-06},
  abstract = {Use an append-only store to record the full series of events that describe actions taken on data in a domain.},
  howpublished = {https://learn.microsoft.com/en-us/azure/architecture/patterns/event-sourcing},
  langid = {american},
  file = {/Users/jmp/Zotero/storage/MTA3EPZL/event-sourcing.html}
}

@misc{martinekuanSagaPatternAzure,
  title = {Saga Pattern - {{Azure Design Patterns}}},
  author = {{martinekuan}},
  urldate = {2023-12-06},
  abstract = {Use the Saga design pattern to ensure data consistency on distributed transactions in microservices architectures.},
  howpublished = {https://learn.microsoft.com/en-us/azure/architecture/reference-architectures/saga/saga},
  langid = {american},
  file = {/Users/jmp/Zotero/storage/PLVSYSAV/saga.html}
}

@article{mattaWhyGoodProjects2003,
  title = {Why {{Good Projects Fail Anyway}}},
  author = {Matta, Nadim and Ashkenas, Ron},
  year = {2003},
  month = sep,
  journal = {Harvard Business Review},
  issn = {0017-8012},
  urldate = {2024-05-01},
  abstract = {Reprint: R0309H Big projects fail at an astonishing rate---more than half the time, by some estimates. It's not hard to understand why. Complicated long-term projects are customarily developed by a series of teams working along parallel tracks. If managers fail to anticipate everything that might fall through the cracks, those tracks will not converge successfully at the end to reach the goal. Take a companywide CRM project. Traditionally, one team might analyze customers, another select the software, a third develop training programs, and so forth. When the project's finally complete, though, it may turn out that the salespeople won't enter in the requisite data because they don't understand why they need to. This very problem has, in fact, derailed many CRM programs at major organizations. There is a way to uncover unanticipated problems while the project is still in development. The key is to inject into the overall plan a series of miniprojects, or ``rapid-results initiatives,'' which each have as their goal a miniature version of the overall goal. In the CRM project, a single team might be charged with increasing the revenues of one sales group in one region by 25\% within four months. To reach that goal, team members would have to draw on the work of all the parallel teams. But in just four months, they would discover the salespeople's resistance and probably other unforeseen issues, such as, perhaps, the need to divvy up commissions for joint-selling efforts. The World Bank has used rapid-results initiatives to great effect to keep a sweeping 16-year project on track and deliver visible results years ahead of schedule. In taking an in-depth look at this project, and others, the authors show why this approach is so effective and how the initiatives are managed in conjunction with more traditional project activities.},
  chapter = {Leading teams},
  keywords = {Fabrication and manufacturing,Financial service sector,Food and beverage sector,Leading teams,North America,Pharmaceutical industry,Project management,South America,Strategic planning},
  file = {/Users/jmp/Zotero/storage/6T6PBV7H/why-good-projects-fail-anyway.html}
}

@misc{mermaidMermaidDiagrammingCharting,
  title = {Mermaid {\textbar} {{Diagramming}} and Charting Tool},
  author = {{Mermaid}},
  urldate = {2023-12-05},
  howpublished = {https://mermaid.js.org/},
  file = {/Users/jmp/Zotero/storage/SUDLMLHG/mermaid.js.org.html}
}

@book{mondenToyotaProductionSystem2012,
  title = {Toyota Production System: An Integrated Approach to Just-in-Time},
  shorttitle = {Toyota Production System},
  author = {Monden, Yasuhiro},
  year = {2012},
  edition = {4th ed},
  publisher = {CRC Press},
  address = {Boca Raton},
  isbn = {978-1-4398-2097-1},
  langid = {english},
  lccn = {TL278 .M659713 2012},
  keywords = {Automobile industry and trade,Japan,Just-in-time systems,Production control,Production management,Toyota Jidosha Kabushiki Kaisha},
  note = {"A Productivity Press book."}
}

@article{Mouse2023,
  title = {{\emph{To a }}{{{\emph{Mouse}}}}},
  year = {2023},
  month = sep,
  journal = {Wikipedia},
  urldate = {2024-05-06},
  abstract = {"To a Mouse, on Turning Her Up in Her Nest With the Plough, November, 1785" is a Scots-language poem written by Robert Burns in 1785. It was included in the Kilmarnock volume and all of the poet's later editions, such as the Poems, Chiefly in the Scottish Dialect (Edinburgh Edition). According to legend, Burns was ploughing in the fields at his Mossgiel Farm and accidentally destroyed a mouse's nest, which it needed to survive the winter. In fact, Burns's brother, Gilbert, claimed that the poet composed the poem while still holding his plough.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1177120381},
  file = {/Users/jmp/Zotero/storage/Y7P7VK7N/To_a_Mouse.html}
}

@article{NAUR_1985,
  title = {Programming as Theory Building},
  author = {Naur, Peter},
  year = {1985},
  journal = {Microprocessing and Microprogramming},
  volume = {15},
  number = {5},
  pages = {253--261},
  issn = {0165-6074},
  doi = {10.1016/0165-6074(85)90032-8},
  abstract = {Some views on programming, taken in a wide sense and regarded as a human activity, are presented. Accepting that programs will not only have to be designed and produced, but also modified so as to cater for changing demands, it is concluded that the proper, primary aim of programming is, not to produce programs, but to have the programmers build theories of the manner in which the problems at hand are solved by program execution. The implications of such a view of programming on matters such as program life and modification, system development methods, and the professional status of programmers, are discussed.},
  keywords = {General,General Terms,Human Factors,programming methodology,programming psychology,Theory}
}

@article{NAUR1985253,
  title = {Programming as Theory Building},
  author = {Naur, Peter},
  year = {1985},
  journal = {Microprocessing and Microprogramming},
  volume = {15},
  number = {5},
  pages = {253--261},
  issn = {0165-6074},
  doi = {10.1016/0165-6074(85)90032-8},
  abstract = {Some views on programming, taken in a wide sense and regarded as a human activity, are presented. Accepting that programs will not only have to be designed and produced, but also modified so as to cater for changing demands, it is concluded that the proper, primary aim of programming is, not to produce programs, but to have the programmers build theories of the manner in which the problems at hand are solved by program execution. The implications of such a view of programming on matters such as program life and modification, system development methods, and the professional status of programmers, are discussed.},
  keywords = {General,General Terms,Human Factors,programming methodology,programming psychology,Theory}
}

@article{ObjectModelingColor2021,
  title = {Object {{Modeling}} in {{Color}}},
  year = {2021},
  month = jan,
  journal = {Wikipedia},
  urldate = {2023-12-06},
  abstract = {UML color standards are a set of four colors associated with Unified Modeling Language (UML) diagrams. The coloring system indicates which of several archetypes apply to the UML object. UML typically identifies a stereotype with a bracketed comment for each object identifying whether it is a class, interface, etc. These colors were first suggested by Peter Coad, Eric Lefebvre, and Jeff De Luca in a series of articles in The Coad Letter,[1][2] and later published in their book Java Modeling In Color With UML.[3]Over hundreds of domain models, it became clear that four major "types" of classes appeared again and again, though they had different names in different domains. After much discussion, these were termed archetypes, which is meant to convey that the classes of a given archetype follow more or less the same form. That is, attributes, methods, associations, and interfaces are fairly similar among classes of a given archetype. When attempting to classify a given domain class, one typically asks about the color standards in this order: pink moment-interval --- Does it represent a moment or interval of time that we need to remember and work with for legal or business reasons? Examples in business systems generally model activities involving people, places and things such as a sale, an order, a rental, an employment, making a journey, etc. yellow roles --- Is it a way of participating in an activity (by either a person, place, or thing)? A person playing the role of an employee in an employment, a thing playing the role of a product in a sale, a location playing the role of a classroom for a training course, are examples of roles. blue description --- Is it simply a catalog-entry-like description which classifies or 'labels' an object? For example, the make and model of a car categorises or describes a number of physical vehicles. The relationship between the blue description and green party, place or thing is a type-instance relationship based on differences in the values of data items held in the 'type' object. green party, place, or thing --- Something tangible, uniquely identifiable. Typically the role-players in a system.  People are green. Organizations are green. The physical objects involved in a rental such as the physical DVDs are green things. Normally, if you get through the above three questions and end up here, your class is a "green."Although the actual colors vary, most systems tend to use lighter color palettes so that black text can also be easily read on a colored background. Coad, et al., used the 4-color pastel Post-it notes,[4] and later had UML modeling tools support the color scheme by associating a color to one or more class stereotypes. Many people feel colored objects appeal to the pattern recognition section of the brain.  Others advocate that you can begin a modeling process with a stack of four-color note cards or colored sticky notes. The value of color modeling was especially obvious when standing back from a model drawn or projected on a wall. That extra dimension allowed modelers to see important aspects of the models (the pink classes, for instance), and to spot areas that may need reviewing (unusual combinations of color classes linked together). The technique also made it easy to help determine aspects of the domain model -- especially for newcomers to modeling. For example, by simply looking first for "pinks" in the domain, it was easy to begin to get some important classes identified for a given domain. It was also easy to review the standard types of attributes, methods, and so on, for applicability to the current domain effort.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  keywords = {Wikipedia},
  annotation = {Page Version ID: 1002173835},
  file = {/Users/jmp/Zotero/storage/RWBGZF4W/Object_Modeling_in_Color.html}
}

@misc{OCL2.4Spec,
  title = {Object {{Constraint Language}} 2.4 {{Specification}}},
  author = {{Object Management Group}},
  publisher = {Object Management Group},
  abstract = {This specification defines the Object Constraint Language (OCL), version 2.4 . OCL version 2.4 is the latest version of OCL that is aligned with UML 2.4.1 and MOF 2.4.1.},
  file = {/Users/jmp/Zotero/storage/EIDSV93N/PDF.pdf}
}

@book{onoToyotaProductionSystem1988,
  title = {Toyota Production System: Beyond Large-Scale Production},
  shorttitle = {Toyota Production System},
  author = {{\=O}no, Taiichi},
  year = {1988},
  publisher = {Productivity Press},
  address = {Cambridge, Mass},
  isbn = {978-0-915299-14-0},
  langid = {english},
  lccn = {TS157 .O5713 1988},
  keywords = {Production control,Toyota Jidosha Kogyo Kabushiki Kaisha},
  note = {Translation of: Toyota seisan h{\=o}shiki Includes index}
}

@article{OODALoop2024,
  title = {{{OODA}} Loop},
  year = {2024},
  month = jan,
  journal = {Wikipedia},
  urldate = {2024-05-06},
  abstract = {The OODA loop (observe, orient, decide, act) is a decision-making model developed by military strategist and United States Air Force Colonel John Boyd. He applied the concept to the combat operations process, often at the operational level during military campaigns. It is often applied to understand commercial operations and learning processes. The approach explains how agility can overcome raw power in dealing with human opponents. It is especially applicable to cyber security and cyberwarfare. The OODA loop has become an important concept in litigation, business, law enforcement, management education, and military strategy. According to Boyd, decision-making occurs in a recurring cycle of "observe, orient, decide, act". An entity (whether an individual or an organization) that can process this cycle quickly, observing and reacting to unfolding events more rapidly than an opponent, can thereby get inside the opponent's decision cycle and gain the advantage. Dominic Cummings, Chief Advisor to the UK Prime Minister Boris Johnson, credited the success of the Vote Leave campaign in the 2016 United Kingdom European Union membership referendum to its faster processing of OODA loops, along with the focus of Vote Leave on disrupting the OODA loops of the opposing Britain Stronger in Europe campaign team.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1195129296},
  file = {/Users/jmp/Zotero/storage/PMBGF86B/OODA_loop.html}
}

@techreport{paulkCapabilityMaturityModel1993,
  title = {Capability {{Maturity Model}} for {{Software}}, {{Version}} 1.1:},
  shorttitle = {Capability {{Maturity Model}} for {{Software}}, {{Version}} 1.1},
  author = {Paulk, Mark C. and Curtis, Bill and Chrissis, Mary B. and Weber, Charles V.},
  year = {1993},
  month = feb,
  number = {CMU/SEI-93-TR-024},
  address = {Fort Belvoir, VA},
  institution = {Defense Technical Information Center},
  doi = {10.21236/ADA263403},
  urldate = {2024-05-06},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/75CI2HQR/Paulk et al. - 1993 - Capability Maturity Model for Software, Version 1..pdf}
}

@article{PersonaUserExperience2023,
  title = {Persona (User Experience)},
  year = {2023},
  month = nov,
  journal = {Wikipedia},
  urldate = {2023-12-06},
  abstract = {A persona (also user persona, customer persona, buyer persona) in user-centered design and marketing is a personalized fictional character created to represent a user type that might use a site, brand, or product in a similar way.  Personas represent the similarities of consumer groups or segments. They are based on demographic and behavioural personal information collected from users, qualitative interviews, and participant observation. Personas are one of the outcomes of market segmentation, where marketers use the results of statistical analysis and qualitative observations to draw profiles, giving them names and personalities to paint a picture of a person that could exist in real life. The term persona is used widely in online and technology applications as well as in advertising, where other terms such as pen portraits may also be used. Personas are useful in considering the goals, desires, and limitations of brand buyers and users in order to help to guide decisions about a service, product or interaction space such as features, interactions, and visual design of a website. Personas may be used as a tool during the user-centered design process for designing software. They can introduce interaction design principles to things like industrial design and online marketing. A user persona is a representation of the goals and behavior of a hypothesized group of users. In most cases, personas are synthesized from data collected from interviews or surveys with users. They are captured in short page descriptions that include behavioral patterns, goals, skills, attitudes, with a few fictional personal details to make the persona a realistic character. In addition to Human-Computer Interaction (HCI), personas are also widely used in sales, advertising, marketing and system design. Personas provide common behaviors, outlooks, and potential objections of people matching a given persona.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  keywords = {Wikiipedia},
  annotation = {Page Version ID: 1185533170},
  file = {/Users/jmp/Zotero/storage/DAIBBK89/Persona_(user_experience).html}
}

@misc{plantuml,
  title = {Plantuml.Com},
  author = {{PlantUml}},
  urldate = {2023-12-05},
  abstract = {Open-source tool that uses simple textual descriptions to draw beautiful UML diagrams.},
  howpublished = {https://plantuml.com/},
  file = {/Users/jmp/Zotero/storage/L9VIHJN5/plantuml.com.html}
}

@article{SemanticField2023,
  title = {Semantic Field},
  year = {2023},
  month = mar,
  journal = {Wikipedia},
  urldate = {2023-12-06},
  abstract = {In linguistics, a semantic field is a lexical set of words grouped semantically (by meaning) that refers to a specific subject. The term is also used in anthropology, computational semiotics, and technical exegesis.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  keywords = {Wikipedia},
  annotation = {Page Version ID: 1145143098},
  file = {/Users/jmp/Zotero/storage/AA7VVZIS/Semantic_field.html}
}

@misc{SpinningMainCables,
  title = {Spinning the {{Main Cables}} - {{The History}} of the {{Design}} and {{Construction}} {\textbar} {{Golden Gate}}},
  urldate = {2024-05-02},
  howpublished = {https://www.goldengate.org/exhibits/spinning-the-main-cables/},
  file = {/Users/jmp/Zotero/storage/GE3KN6BK/spinning-the-main-cables.html}
}

@misc{SupplyChainRaw,
  title = {The {{Supply Chain}}: {{From Raw Materials}} to {{Order Fulfillment}}},
  shorttitle = {The {{Supply Chain}}},
  journal = {Investopedia},
  urldate = {2024-05-22},
  abstract = {A supply chain is a network of people and entities who are involved in creating a product and delivering it to its consumer.},
  howpublished = {https://www.investopedia.com/terms/s/supplychain.asp},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/CNCZ8AL5/supplychain.html}
}

@article{SystemsSystemsFailure2009,
  title = {Systems and {{Systems Failure Analysis Concepts}}},
  year = {2009},
  month = dec,
  doi = {10.31399/asm.tb.sfa.t52780019},
  urldate = {2024-05-02},
  abstract = {Abstract. A system failure occurs when a system does not do what it is supposed to do when it is supposed to do it, or it does something it is not supposed},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/FZ5QDVUS/Systems-and-Systems-Failure-Analysis-Concepts.html}
}

@article{SystemWiki2024,
  title = {System},
  year = {2024},
  month = apr,
  journal = {Wikipedia},
  urldate = {2024-05-02},
  abstract = {A system is a group of interacting or interrelated elements that act according to a set of rules to form a unified whole. A system, surrounded and influenced by its environment, is described by its boundaries, structure and purpose and is expressed in its functioning. Systems are the subjects of study of systems theory and other systems sciences. Systems have several common properties and characteristics, including structure, function(s), behavior and interconnectivity.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1219289025},
  file = {/Users/jmp/Zotero/storage/JFHEZNYU/System.html}
}

@article{TaylorSeries2023,
  title = {Taylor Series},
  year = {2023},
  month = dec,
  journal = {Wikipedia},
  urldate = {2023-12-15},
  abstract = {In mathematics, the Taylor series or Taylor expansion of a function is an infinite sum of terms that are expressed in terms of the function's derivatives at a single point. For most common functions, the function and the sum of its Taylor series are equal near this point. Taylor series are named after Brook Taylor, who introduced them in 1715. A Taylor series is also called a Maclaurin series when 0 is the point where the derivatives are considered, after Colin Maclaurin, who made extensive use of this special case of Taylor series in the mid-18th century. The partial sum formed by the first n + 1 terms of a Taylor series is a polynomial of degree n that is called the nth Taylor polynomial of the function. Taylor polynomials are approximations of a function, which become generally more accurate as n increases. Taylor's theorem gives quantitative estimates on the error introduced by the use of such approximations. If the Taylor series of a function is convergent, its sum is the limit of the infinite sequence of the Taylor polynomials. A function may differ from the sum of its Taylor series, even if its Taylor series is convergent. A function is analytic at a point x if it is equal to the sum of its Taylor series in some open interval (or open disk in the complex plane) containing x. This implies that the function is analytic at every point of the interval (or disk).},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1189567580},
  file = {/Users/jmp/Zotero/storage/LUK6UPWX/Taylor_series.html}
}

@book{TWR2024,
  title = {The Warehouse Revolution: {{Automate}} or Terminate},
  author = {{Devenyi, Peter} and {Pinilla, Miguel} and {Stollberg, Jim}},
  year = {2024},
  month = mar,
  edition = {Paperback},
  pages = {200},
  publisher = {Business Expert Press},
  copyright = {All rights reserved},
  isbn = {978-1-63742-573-2},
  langid = {english},
  keywords = {Business & Finance,Business Facility Management,Computers & Technology Industry,Production & Operations,Unknown}
}

@misc{UML2.5Specification,
  title = {Unified {{Modeling Language}}, v2.5.1},
  author = {{Object Management Group}},
  publisher = {Object Management Group},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/WCEPQF9J/Unified Modeling Language, v2.5.1.pdf}
}

@misc{UofT_CRC_2017,
  type = {Course {{Materials}}},
  title = {Class, {{Responsibility}}, and {{Collaboration}}},
  author = {{University of Toronto, CSC207}},
  year = {2017},
  file = {/Users/jmp/Zotero/storage/4CGIFBCZ/CRC.pdf}
}

@article{UseCase2023,
  title = {Use Case},
  year = {2023},
  month = oct,
  journal = {Wikipedia},
  urldate = {2023-12-06},
  abstract = {In software and systems engineering, the phrase use case is a polyseme with two senses: A usage scenario for a piece of software; often used in the plural to suggest situations where a piece of software may be useful. A potential scenario in which a system receives an external request (such as user input) and responds to it.This article discusses the latter sense. (For more on the other sense, see for example user persona). A use case is a list of actions or event steps typically defining the interactions between a role (known in the Unified Modeling Language (UML) as an actor) and a system to achieve a goal. The actor can be a human or another external system. In systems engineering, use cases are used at a higher level than within software engineering, often representing missions or stakeholder goals. The detailed requirements may then be captured in the Systems Modeling Language (SysML) or as contractual statements.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  keywords = {Wikipedia},
  annotation = {Page Version ID: 1180881181},
  file = {/Users/jmp/Zotero/storage/CJZIDYE3/Use_case.html}
}

@article{UserStory2023,
  title = {User Story},
  year = {2023},
  month = dec,
  journal = {Wikipedia},
  urldate = {2023-12-06},
  abstract = {In software development and product management, a user story is an informal, natural language description of features of a software system. They are written from the perspective of an end user or user of a system, and may be recorded on index cards, Post-it notes, or digitally in specific management software. Depending on the product, user stories may be written by different stakeholders like client, user, manager, or development team. User stories are a type of boundary object. They facilitate sensemaking and communication; and may help software teams document their understanding of the system and its context.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  keywords = {Wikipedia},
  annotation = {Page Version ID: 1188250629},
  file = {/Users/jmp/Zotero/storage/FSL5S43K/User_story.html}
}

@misc{WhatSaleHow,
  title = {What a {{Sale Is}}, {{How It Works}}, {{Different Types}} \& {{Ways}} to {{Pay}}},
  journal = {Investopedia},
  urldate = {2023-12-12},
  abstract = {A sale is a transaction between two parties where one exchanges tangible or intangible goods, services, or assets for money with the other.},
  howpublished = {https://www.investopedia.com/terms/s/sale.asp},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/82LS75RG/sale.html}
}

@book{wheelerUnderstandingStatisticalProcess2010,
  title = {Understanding Statistical Process Control},
  author = {Wheeler, Donald J. and Chambers, David S.},
  year = {2010},
  edition = {3rd ed},
  publisher = {SPC Press},
  address = {Knoxville, Tenn},
  isbn = {978-0-945320-69-2},
  lccn = {TS156.8 .W47 2010},
  keywords = {Process control,Quality control,Statistical methods},
  annotation = {OCLC: ocn689998452},
  note = {Includes index}
}

@misc{WhyProcessAutomation,
  title = {Why {{Process Automation Initiatives Fail}} ({{And How Yours Can Succeed}})},
  urldate = {2024-05-01},
  howpublished = {https://www.forbes.com/sites/forbestechcouncil/2021/10/12/why-process-automation-initiatives-fail-and-how-yours-can-succeed/?sh=4b0ec39d3b62},
  file = {/Users/jmp/Zotero/storage/TZRBMY9X/why-process-automation-initiatives-fail-and-how-yours-can-succeed.html}
}

@misc{WhyProjectsReally,
  title = {Why Do Projects Really Fail?},
  urldate = {2024-05-01},
  abstract = {Organizations have long struggled to identify the factors that commonly cause project failure. This article defines nine such factors, describing each and suggesting tips for avoiding these common mistakes: poor alignment, bad planning, lack of executive support, incomplete requirements, unclear expectations, scope creep, lack of resources, choice of technology, and inexperience.},
  howpublished = {https://www.pmi.org/learning/library/identify-factors-cause-project-failure-2442},
  langid = {english},
  file = {/Users/jmp/Zotero/storage/JIAKGTM7/identify-factors-cause-project-failure-2442.html}
}

@article{wuWhyBigProjects2023,
  title = {Why {{Big Projects Fail}} --- and {{How}} to {{Give Yours}} a {{Better Chance}} of {{Success}}},
  author = {Wu, Te and Misra, Ram B.},
  year = {2023},
  month = nov,
  journal = {Harvard Business Review},
  issn = {0017-8012},
  urldate = {2024-05-01},
  abstract = {There are five reasons that large projects fail. Wrong projects are ones that defy conventional business rationale, creating outputs that either few people want, that add little to no real value, or that undershoot the desired benefits because they are so difficult to achieve. A second reason is unreasonable constraints --- when the effort doesn't have adequate funding, people, time, or other key inputs. Lack of effective leadership is another project killer, as is undue complexity, where projects span multiple teams, business units, geographies, and organizations and face volatility, uncertainty, and ambiguity. A final obstacle to project success is too much or too little management. To avoid these pitfalls, smart companies should hire senior executives who are project management experts, commit to clear processes and strong governance, and empower project managers.},
  chapter = {Project management},
  keywords = {Collaboration and teams,Project management},
  file = {/Users/jmp/Zotero/storage/QP4G86Z6/why-big-projects-fail-and-how-to-give-yours-a-better-chance-of-success.html}
}
